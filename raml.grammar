title: ("title", <any string>)

version: ("version", <any string>)

schemas: ("schemas", ((<any string>, JSONSchema))*)

baseUri: ("baseUri", <any string>)

displayName: ("displayName", <any string>)

description: ("description", <any string>)

type: ("type", string | number | integer | date | boolean)

enum: ("enum", (<any string>)*)

pattern: ("pattern", Regex)

minLength: ("minLength", Integer)

maxLength: ("maxLength", Integer)

maximum: ("maximum", Integer)

minimum: ("minimum", Integer)

required: ("required", Boolean)

default: ("default", <any string>)

uriParameters: ("uriParameters", ((<any string>, (displayName | description | type | enum | pattern | minLength | maxLength | maximum | minimum | required | default)*))*)

defaultMediaTypes: ("defaultMediaTypes", <any string> | (<any string>)*)

content: ("content", <any string>)

documentation: ("documentation", (title | content)*)

summary: ("summary", <any string>)

example: ("example", <any string>)

headers: ("headers", ((<any string>, (displayName | description | type | enum | pattern | minLength | maxLength | maximum | minimum | required | default | example)*))*)

queryParameters: ("queryParameters", ((<any string>, (displayName | description | type | enum | pattern | minLength | maxLength | maximum | minimum | required | default | example)*))*)

formParameters: ("formParameters", (displayName | description | type | enum | pattern | minLength | maxLength | maximum | minimum | required | default | example)*)

application/x-www-form-urlencoded: ("application/x-www-form-urlencoded", (formParameters)*)

multipart/form-data: ("multipart/form-data", (formParameters)*)

schema: ("schema", XMLSchema | JSONSchema)

application/json: ("application/json", ((schema | example)*)*)

application/xml: ("application/xml", ((schema | example)*)*)

body: ("body", (application/x-www-form-urlencoded | multipart/form-data | application/json | application/xml | (<any string>, ((schema | example)*)*))*)

(Integer)*: ("(Integer)*", (body | description)*)

responses: ("responses", ((Integer)*)*)

securedBy: ("securedBy", list)

get: ("get", (summary | description | headers | queryParameters | body | responses | securedBy)*)

post: ("post", (summary | description | headers | queryParameters | body | responses | securedBy)*)

put: ("put", (summary | description | headers | queryParameters | body | responses | securedBy)*)

delete: ("delete", (summary | description | headers | queryParameters | body | responses | securedBy)*)

head: ("head", (summary | description | headers | queryParameters | body | responses | securedBy)*)

path: ("path", (summary | description | headers | queryParameters | body | responses | securedBy)*)

options: ("options", (summary | description | headers | queryParameters | body | responses | securedBy)*)

is: ("is", list)

type': ("type", <any string>)

traits: ("traits", ((<any string>, (displayName | summary | description | headers | queryParameters | body | responses | securedBy)*))*)

resourceTypes: ("resourceTypes", (<any string>, (summary | description | displayName | get | post | put | delete | head | path | options | is | type' | securedBy)*))

type'': ("type", OAuth 1.0 | OAuth 2.0 | Basic Authentication | Digest Authentication | <any string>)

requestTokenUri: ("requestTokenUri", <any string>)

authorizationUri: ("authorizationUri", <any string>)

tokenCredentialsUri: ("tokenCredentialsUri", <any string>)

accessTokenUri: ("accessTokenUri", <any string>)

authorizationGrants: ("authorizationGrants", <any string>)

scopes: ("scopes", <any string>)

settings: ("settings", requestTokenUri | authorizationUri | tokenCredentialsUri | accessTokenUri | authorizationGrants | scopes | (<any string>, <any string>))

describedBy: ("describedBy", headers | queryParameters | responses)

securitySchemes: ("securitySchemes", (<any string>, (description | type'' | settings | describedBy)*))

root: (title | version | schemas | baseUri | uriParameters | defaultMediaTypes | documentation | (<any string>, (displayName | get | post | put | delete | head | path | options | is | type' | (<any string>, PostposedExecution) | securedBy)*) | traits | resourceTypes | securitySchemes | securedBy)*
